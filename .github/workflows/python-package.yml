# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Colab SSH

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-apt python3-distutils-extra python-apt python-distutils-extra libapt-pkg-dev
        python3 -m pip install --upgrade pip wheel
        python3 -m pip install flake8 pytest coverage ipython ipywidgets psutil codecov
        python3 -m pip install "git+https://salsa.debian.org/apt-team/python-apt.git@1.4.0_beta3"
        sudo python3 -m pip install --upgrade pip wheel setuptools
        sudo python3 -m pip install flake8 pytest coverage ipython ipywidgets psutil codecov
        # sudo python3 -m pip install "git+https://salsa.debian.org/apt-team/python-apt.git@1.4.0_beta3"
        if [ -f requirements.txt ]; then python3 -m pip install -r requirements.txt; fi
        if [ -f requirements.txt ]; then sudo python3 -m pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unnitest
      env:
        TEAMS_WEBHOOK_ADDRESS: ${{ secrets.TEAMS_WEBHOOK_ADDRESS }}
        TEST_SSH_PUBLIC_KEY: ${{ secrets.TEST_SSH_PUBLIC_KEY }}
      run: |
        sudo -E python3 -m coverage run --source=. -m unittest discover
        python3 -m coverage report -i
        codecov